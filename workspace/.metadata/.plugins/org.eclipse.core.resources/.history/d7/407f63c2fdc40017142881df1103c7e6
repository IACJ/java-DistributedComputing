package com.acj.rmi.server;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.*;

public class StudentInfoImpl extends UnicastRemoteObject implements IStudentInfo { 

	static Map<Long, Student> students = Collections.synchronizedMap(new HashMap<Long, Student>()); 
	static Connection con;   
	
	protected StudentInfoImpl() throws RemoteException {
		super();
	    
        //驱动程序名
        String driver = "com.mysql.jdbc.Driver";
        //URL指向要访问的数据库名mydata
        String url = "jdbc:mysql://localhost:3306/rmi_test";
        //MySQL配置时的用户名
        String user = "root";
        //MySQL配置时的密码
        String password = "";
        //遍历查询结果集
        try {
            //加载驱动程序
            Class.forName(driver);
            //1.getConnection()方法，连接MySQL数据库！！
            con = (Connection) DriverManager.getConnection(url,user,password);
            if(!con.isClosed())
                System.out.println("Succeeded connecting to the Database!");
        } catch(ClassNotFoundException e) {   
            //数据库驱动类异常处理
            System.out.println("Sorry,can`t find the Driver!");   
            e.printStackTrace();   
            } catch (Exception e) {
            e.printStackTrace();
        }
		
	}

	@Override
	public List<Student> list() throws RemoteException {
		
      //2.创建statement类对象，用来执行SQL语句！！
      Statement statement = con.createStatement();
      //要执行的SQL语句
      String sql = "select * from `students`";
      //3.ResultSet类，用来存放获取的结果集！！
      ResultSet rs = statement.executeQuery(sql);
      System.out.println("-----------------");
      System.out.println("执行结果如下所示:");  
      System.out.println("-----------------");  
      System.out.println("姓名" + "\t" + "职称");  
      System.out.println("-----------------");  
       
      String id = null;
      String name = null;
      String grade = null;
      List<Student> r = new ArrayList<Student>();
      while(rs.next()){
 
          id = rs.getString("id");
          name = rs.getString("name");
          grade = rs.getString("grade");

          r.add(new Student(id,name,grade));
      }
      rs.close();
		

		return r;
	}

	@Override
	public Student getStu(Long id) throws RemoteException {
		return students.get(id);
	}
	

	

}
