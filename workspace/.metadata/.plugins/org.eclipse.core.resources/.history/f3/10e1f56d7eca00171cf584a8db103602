package com.acj.sock;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;

public class Client {
    
    private static final String SERVER_IP = "127.0.0.1";
    private static final int SERVER_PORT = 2017;
    
    private MyStreamSocket sSock;
    
    public Client(){
    	try {
    		try {	
				sSock = new MyStreamSocket(SERVER_IP, SERVER_PORT);
	
				print("请输入你想请求的文件");
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
				sSock.sendMessage(br.readLine());
				
		        String msg = sSock.receiveMessage();
		        if ( "False".equals(msg)){
		        	print("找不到该文件，文件名无效");
		        	return;
		        }else{
		        	print("请等待...");
		        }
		        print(sSock.receiveMessage());
		        
				/**开始接收文件*/
				DataInputStream dis = new DataInputStream(serverSock.getInputStream());
				//文件名和长度
				String fileName = dis.readUTF();
				long fileLength = dis.readLong();
				FileOutputStream fos = new FileOutputStream(new File("c:/test/oo" + fileName));
//				  
//				byte[] sendBytes = new byte[1024];
//				int transLen = 0;
//				print("----开始接收文件<" + fileName + ">,文件大小为<" + fileLength + ">----");
//				
//				while(true){
//					int read = 0;
//					read = dis.read(sendBytes);
//					if(read == -1){
//						break;
//					}
//						
//					transLen += read;
//					System.out.println("接收文件进度" + 100 * transLen/fileLength + "%...");
//					fos.write(sendBytes, 0, read);
//					fos.flush();
//				}
//				print("----接收文件<" + fileName + ">成功-------");
//				dis.close();
//				fos.close();
            	} catch (Exception e) {
            		e.printStackTrace();
            	}finally{
            		sSock.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public static void main(String[] args) throws Exception {
    	print("程序开始");
        new Client();
        print("程序结束");
    }
    public static void print(String s){
    	System.out.println("[Client]: "+s);
    }
}