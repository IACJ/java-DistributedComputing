package com.acj.sock;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class Server extends ServerSocket {
	
	private static final int SERVER_PORT = 2017;
	public Server() throws IOException {
	        super(SERVER_PORT);

	        try {
	            while (true) {
	                Socket socket = accept();
	                new CreateServerThread(socket);//当有请求时，启一个线程处理
	            }
	        } catch (IOException e) {
	        } finally {
	            close();
	        }
	    }

	public static void main(String[] args) {
		System.out.println("[server] 启动");
		
		try {
            ServerSocket serverSocket = new ServerSocket(2017);
            while (true) {
            	System.out.println("[server] accepting...");
                Socket socket = serverSocket.accept();
                System.out.println("[server] accepted.");

                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                String result = bufferedReader.readLine();
                System.out.println("[server] receive : " + result);

                /** 发送服务端准备传输的 */
                // 由Socket对象得到输出流，并构造PrintWriter对象
                PrintWriter printWriter = new PrintWriter(socket.getOutputStream());
                printWriter.print("hello Client, I am Server!");
                printWriter.flush();

                /** 关闭Socket*/
                printWriter.close();
                bufferedReader.close();
                socket.close();
                System.out.println("[server] 连接断开.\n");
            }
        } catch (Exception e) {
            System.out.println("Exception:" + e);
        }finally{
//            serverSocket.close();
        }
	}

}
